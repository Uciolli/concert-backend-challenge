// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using backend_challenge.Data;

namespace backend_challenge.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20211002192327_NtoNtable")]
    partial class NtoNtable
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.10");

            modelBuilder.Entity("EmpregadoMembro", b =>
                {
                    b.Property<int>("Empregadosid_empregado")
                        .HasColumnType("int");

                    b.Property<int>("Membrosid_empregado")
                        .HasColumnType("int");

                    b.Property<int>("Membrosid_projeto")
                        .HasColumnType("int");

                    b.HasKey("Empregadosid_empregado", "Membrosid_empregado", "Membrosid_projeto");

                    b.HasIndex("Membrosid_empregado", "Membrosid_projeto");

                    b.ToTable("EmpregadoMembro");
                });

            modelBuilder.Entity("MembroProjeto", b =>
                {
                    b.Property<int>("Projetosid_projeto")
                        .HasColumnType("int");

                    b.Property<int>("Membrosid_empregado")
                        .HasColumnType("int");

                    b.Property<int>("Membrosid_projeto")
                        .HasColumnType("int");

                    b.HasKey("Projetosid_projeto", "Membrosid_empregado", "Membrosid_projeto");

                    b.HasIndex("Membrosid_empregado", "Membrosid_projeto");

                    b.ToTable("MembroProjeto");
                });

            modelBuilder.Entity("backend_challenge.Data.Empregado", b =>
                {
                    b.Property<int>("id_empregado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("endereco")
                        .HasColumnType("longtext");

                    b.Property<string>("primeiro_nome")
                        .HasColumnType("longtext");

                    b.Property<int>("telefone")
                        .HasColumnType("int");

                    b.Property<string>("ultimo_nome")
                        .HasColumnType("longtext");

                    b.HasKey("id_empregado");

                    b.ToTable("Empregados");

                    b.HasData(
                        new
                        {
                            id_empregado = 1,
                            endereco = "big.boss@company.com",
                            primeiro_nome = "Big",
                            telefone = 936854270,
                            ultimo_nome = "BOSS"
                        },
                        new
                        {
                            id_empregado = 2,
                            endereco = "jonas.xavier@company.com",
                            primeiro_nome = "Jonas",
                            telefone = 936854271,
                            ultimo_nome = "Xavier"
                        },
                        new
                        {
                            id_empregado = 3,
                            endereco = "linus.torvalds@company.com",
                            primeiro_nome = "Linus",
                            telefone = 936854272,
                            ultimo_nome = "TORVALDS"
                        },
                        new
                        {
                            id_empregado = 4,
                            endereco = "jimmy.wales@company.com",
                            primeiro_nome = "Jimmy",
                            telefone = 936854273,
                            ultimo_nome = "WALES"
                        },
                        new
                        {
                            id_empregado = 5,
                            endereco = "larry.page@company.com",
                            primeiro_nome = "Larry",
                            telefone = 936854274,
                            ultimo_nome = "PAGE"
                        });
                });

            modelBuilder.Entity("backend_challenge.Data.Membro", b =>
                {
                    b.Property<int>("id_empregado")
                        .HasColumnType("int");

                    b.Property<int>("id_projeto")
                        .HasColumnType("int");

                    b.HasKey("id_empregado", "id_projeto");

                    b.ToTable("Membros");
                });

            modelBuilder.Entity("backend_challenge.Data.Projeto", b =>
                {
                    b.Property<int>("id_projeto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("data_criacao")
                        .HasColumnType("longtext");

                    b.Property<string>("data_termino")
                        .HasColumnType("longtext");

                    b.Property<int>("gerenteId")
                        .HasColumnType("int");

                    b.Property<string>("nome")
                        .HasColumnType("longtext");

                    b.HasKey("id_projeto");

                    b.ToTable("Projetos");

                    b.HasData(
                        new
                        {
                            id_projeto = 1,
                            data_criacao = "1998-09-08",
                            data_termino = "NULL",
                            gerenteId = 5,
                            nome = "Google"
                        },
                        new
                        {
                            id_projeto = 2,
                            data_criacao = "1991-01-01",
                            data_termino = "NULL",
                            gerenteId = 3,
                            nome = "Linux"
                        },
                        new
                        {
                            id_projeto = 3,
                            data_criacao = "2001-01-01",
                            data_termino = "NULL",
                            gerenteId = 4,
                            nome = "Wikipedia"
                        },
                        new
                        {
                            id_projeto = 4,
                            data_criacao = "2015-09-14",
                            data_termino = "NULL",
                            gerenteId = 5,
                            nome = "CRM"
                        });
                });

            modelBuilder.Entity("EmpregadoMembro", b =>
                {
                    b.HasOne("backend_challenge.Data.Empregado", null)
                        .WithMany()
                        .HasForeignKey("Empregadosid_empregado")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("backend_challenge.Data.Membro", null)
                        .WithMany()
                        .HasForeignKey("Membrosid_empregado", "Membrosid_projeto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MembroProjeto", b =>
                {
                    b.HasOne("backend_challenge.Data.Projeto", null)
                        .WithMany()
                        .HasForeignKey("Projetosid_projeto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("backend_challenge.Data.Membro", null)
                        .WithMany()
                        .HasForeignKey("Membrosid_empregado", "Membrosid_projeto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
